[01m[K/home/hak/catkin_SEER/src/SEER/third_party/traj_utils/src/planning_visualization.cpp:[m[K In member function â€˜[01m[Kvoid bg_planner::PlanningVisualization::drawLines(const std::vector<Eigen::Matrix<double, 3, 1> >&, const double&, const Vector4d&, const string&, const int&, const int&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/third_party/traj_utils/src/planning_visualization.cpp:318:21:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  318 |   for (int i = 0; [01;35m[Ki < list.size() - 1[m[K; ++i) {
      |                   [01;35m[K~~^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/third_party/traj_utils/src/planning_visualization.cpp:[m[K In member function â€˜[01m[Kvoid bg_planner::PlanningVisualization::drawPrediction(bg_planner::ObjPrediction, double, const Vector4d&, int)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/third_party/traj_utils/src/planning_visualization.cpp:498:21:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<bg_planner::PolynomialPrediction>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  498 |   for (int i = 0; [01;35m[Ki < pred->size()[m[K; i++) {
      |                   [01;35m[K~~^~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/third_party/traj_utils/src/planning_visualization.cpp:[m[K In member function â€˜[01m[Kvoid bg_planner::PlanningVisualization::drawFrontier(const std::vector<std::vector<Eigen::Matrix<double, 3, 1> > >&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/third_party/traj_utils/src/planning_visualization.cpp:511:21:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<std::vector<Eigen::Matrix<double, 3, 1> > >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  511 |   for (int i = 0; [01;35m[Ki < frontiers.size()[m[K; ++i) {
      |                   [01;35m[K~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/third_party/traj_utils/src/process_msg.cpp:[m[K In function â€˜[01m[Kvoid cloudCallback(const PointCloud2ConstPtr&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/third_party/traj_utils/src/process_msg.cpp:39:21:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<pcl::PointXYZ, Eigen::aligned_allocator<pcl::PointXYZ> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
   39 |   for (int i = 0; [01;35m[Ki < pts.points.size()[m[K; ++i) {
      |                   [01;35m[K~~^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/third_party/traj_utils/src/planning_visualization.cpp:[m[K In member function â€˜[01m[KEigen::Vector4d bg_planner::PlanningVisualization::getColor(const double&, double)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/third_party/traj_utils/src/planning_visualization.cpp:532:10:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Klambda[m[Kâ€™ may be used uninitialized in this function [[01;35m[K-Wmaybe-uninitialized[m[K]
  532 |   double [01;35m[Klambda[m[K;
      |          [01;35m[K^~~~~~[m[K
