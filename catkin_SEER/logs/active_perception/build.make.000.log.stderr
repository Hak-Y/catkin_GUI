[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/graph_node.cpp:[m[K In static member function â€˜[01m[Kstatic double bg_planner::ViewNode::searchRawPath(const Vector3d&, const Vector3d&, std::vector<Eigen::Matrix<double, 3, 1> >&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/graph_node.cpp:65:8:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ksafe[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
   65 |   bool [01;35m[Ksafe[m[K = true;
      |        [01;35m[K^~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kvoid bg_planner::FrontierFinder::expandFrontier(const Vector3i&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:208:23:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  208 |   if ([01;35m[Kexpanded.size() > cluster_min_[m[K) {
      |       [01;35m[K~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:177:8:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kt1[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  177 |   auto [01;35m[Kt1[m[K = ros::Time::now();
      |        [01;35m[K^~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kvoid bg_planner::FrontierFinder::predOnFrontiers()[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:348:7:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kmap_voxel_num_yz[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  348 |   int [01;35m[Kmap_voxel_num_yz[m[K = edt_env_->sdf_map_->mp_->map_voxel_num_(1) * edt_env_->sdf_map_->mp_->map_voxel_num_(2);
      |       [01;35m[K^~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/noetic/include/ros/ros.h:40[m[K,
                 from [01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/include/active_perception/frontier_finder.h:4[m[K,
                 from [01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:1[m[K:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kvoid bg_planner::FrontierFinder::labelRoomFtr(const double&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:607:17:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 8 has type â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
  607 |       ROS_ERROR([01;35m[K"path size: %d"[m[K, [32m[Kpath.size()[m[K);
      |                 [01;35m[K^~~~~~~~~~~~~~~[m[K  [32m[K~~~~~~~~~~~[m[K
      |                                           [32m[K|[m[K
      |                                           [32m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type {aka long unsigned int}[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:607:30:[m[K [01;36m[Knote: [m[Kformat string is defined here
  607 |       ROS_ERROR("path size: [01;36m[K%d[m[K", path.size());
      |                             [01;36m[K~^[m[K
      |                              [01;36m[K|[m[K
      |                              [01;36m[Kint[m[K
      |                             [32m[K%ld[m[K
In file included from [01m[K/opt/ros/noetic/include/ros/ros.h:40[m[K,
                 from [01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/include/active_perception/frontier_finder.h:4[m[K,
                 from [01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:1[m[K:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:625:19:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 8 has type â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
  625 |         ROS_ERROR([01;35m[K"path2 size: %d"[m[K, [32m[Kpath.size()[m[K);
      |                   [01;35m[K^~~~~~~~~~~~~~~~[m[K  [32m[K~~~~~~~~~~~[m[K
      |                                              [32m[K|[m[K
      |                                              [32m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type {aka long unsigned int}[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:625:33:[m[K [01;36m[Knote: [m[Kformat string is defined here
  625 |         ROS_ERROR("path2 size: [01;36m[K%d[m[K", path.size());
      |                                [01;36m[K~^[m[K
      |                                 [01;36m[K|[m[K
      |                                 [01;36m[Kint[m[K
      |                                [32m[K%ld[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kvoid bg_planner::FrontierFinder::getTopViewpointsBC(const Vector3d&, std::vector<Eigen::Matrix<double, 3, 1> >&, std::vector<double>&, std::vector<Eigen::Matrix<double, 3, 1> >&, std::vector<int>&, std::vector<int>&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:665:10:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kno_view[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  665 |     bool [01;35m[Kno_view[m[K = true;
      |          [01;35m[K^~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kvoid bg_planner::FrontierFinder::getPathForTour(const Vector3d&, const std::vector<int>&, std::vector<Eigen::Matrix<double, 3, 1> >&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:761:21:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<int>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  761 |   for (int i = 0; [01;35m[Ki < frontier_ids.size() - 1[m[K; ++i) {
      |                   [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kvoid bg_planner::FrontierFinder::sampleViewpointsIG(bg_planner::Frontier&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:788:25:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  788 |       for (int i = 1; [01;35m[Ki < cells.size()[m[K; ++i) {
      |                       [01;35m[K~~^~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kbool bg_planner::FrontierFinder::isNearObstacle(const Vector3d&, double)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:856:18:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kvox_num[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  856 |   else const int [01;35m[Kvox_num[m[K = floor(clearance / resolution_);
      |                  [01;35m[K^~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kint bg_planner::FrontierFinder::computeYawInfoGain(const Vector3d&, const double&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:896:14:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kflag_unknown[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  896 |         bool [01;35m[Kflag_unknown[m[K = false;
      |              [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kvoid bg_planner::FrontierFinder::computeInfoGain(const Vector3d&, const double&, const int&, std::vector<bg_planner::Viewpoint>&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:965:12:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kflag_unknown[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  965 |       bool [01;35m[Kflag_unknown[m[K = false;
      |            [01;35m[K^~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:951:9:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kpotential_gain[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  951 |     int [01;35m[Kpotential_gain[m[K = 0;
      |         [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[KEigen::Vector3i bg_planner::FrontierFinder::searchClearVoxel(const Vector3i&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:1075:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kadr[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
 1075 |       int [01;35m[Kadr[m[K = toadr(nbr);
      |           [01;35m[K^~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kbool bg_planner::FrontierFinder::detectHorizontalGap(const Vector3d&, Eigen::Vector3d&, double&, const double&, const double&, const double&, bool, bool)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:1282:21:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<cv::Vec<int, 4> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
 1282 |   for (int i = 0; [01;35m[Ki < lines_p.size()[m[K; i++) {
      |                   [01;35m[K~~^~~~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:1283:25:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<cv::Vec<int, 4> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
 1283 |     for (int j = i+1; [01;35m[Kj < lines_p.size()[m[K; j++) {
      |                       [01;35m[K~~^~~~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:1326:21:[m[K [01;35m[Kwarning: [m[Kcomparisons like â€˜[01m[KX<=Y<=Z[m[Kâ€™ do not have their mathematical meaning [[01;35m[K-Wparentheses[m[K]
 1326 |     if ([01;35m[Kh_min_door_ < *min_it[m[K < h_max_door_) {
      |         [01;35m[K~~~~~~~~~~~~^~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:1310:34:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Knorm[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
 1310 |   double door_dir_x, door_dir_y, [01;35m[Knorm[m[K;
      |                                  [01;35m[K^~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kbool bg_planner::FrontierFinder::detectVerticalGap(Eigen::Vector3d&, double&, const double&, const double&, const double&, bool, bool)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:1533:21:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<cv::Vec<int, 4> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
 1533 |   for (int i = 0; [01;35m[Ki < lines_p.size()[m[K; i++) {
      |                   [01;35m[K~~^~~~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:1534:25:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<cv::Vec<int, 4> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
 1534 |     for (int j = i+1; [01;35m[Kj < lines_p.size()[m[K; j++) {
      |                       [01;35m[K~~^~~~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:1564:19:[m[K [01;35m[Kwarning: [m[Kcomparisons like â€˜[01m[KX<=Y<=Z[m[Kâ€™ do not have their mathematical meaning [[01;35m[K-Wparentheses[m[K]
 1564 |   if ([01;35m[Kv_min_door_ < dis[m[K < v_max_door_) {
      |       [01;35m[K~~~~~~~~~~~~^~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:1530:23:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kdis_thres_s[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
 1530 |   double d1, d2, dis, [01;35m[Kdis_thres_s[m[K, dis_thres_b, min_dis;
      |                       [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:1530:36:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kdis_thres_b[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
 1530 |   double d1, d2, dis, dis_thres_s, [01;35m[Kdis_thres_b[m[K, min_dis;
      |                                    [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kvoid bg_planner::FrontierFinder::removeFPDoor(const double&, const double&, const double&, const double&, const double&, const double&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:1615:13:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kt1[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
 1615 |   ros::Time [01;35m[Kt1[m[K = ros::Time::now();
      |             [01;35m[K^~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/perception_utils.cpp:[m[K In member function â€˜[01m[Kvoid bg_planner::PerceptionUtils::getFOV(std::vector<Eigen::Matrix<double, 3, 1> >&, std::vector<Eigen::Matrix<double, 3, 1> >&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/perception_utils.cpp:76:21:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
   76 |   for (int i = 0; [01;35m[Ki < cam_vertices1_.size()[m[K; ++i) {
      |                   [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:[m[K In member function â€˜[01m[Kvoid bg_planner::HeadingPlanner::searchPathOfYaw(const std::vector<Eigen::Matrix<double, 3, 1> >&, const std::vector<double>&, const double&, const MatrixXd&, std::vector<double>&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:179:21:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<double>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  179 |   for (int i = 0; [01;35m[Ki < yaws.size()[m[K; ++i) {
      |                   [01;35m[K~~^~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:182:35:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<double>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  182 |     bool start_end = (i == 0 || [01;35m[Ki == yaws.size() - 1[m[K);
      |                                 [01;35m[K~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:181:10:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kt1[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  181 |     auto [01;35m[Kt1[m[K = ros::Time::now();
      |          [01;35m[K^~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:177:19:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kcur_pos[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  177 |   Eigen::Vector3d [01;35m[Kcur_pos[m[K = pts[0];
      |                   [01;35m[K^~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:224:8:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kt1[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  224 |   auto [01;35m[Kt1[m[K = ros::Time::now();
      |        [01;35m[K^~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:[m[K In member function â€˜[01m[Kdouble bg_planner::HeadingPlanner::calcInformationGain(const Vector3d&, const double&, const MatrixXd&, const int&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:275:45:[m[K [01;35m[Kwarning: [m[Klogical not is only applied to the left hand side of comparison [[01;35m[K-Wlogical-not-parentheses[m[K]
  275 |         if (!sdf_map_->getOccupancy(pt_idx) [01;35m[K==[m[K SDFMap::UNKNOWN) continue;
      |                                             [01;35m[K^~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:275:13:[m[K [01;36m[Knote: [m[Kadd parentheses around left hand side expression to silence this warning
  275 |         if ([01;36m[K!sdf_map_->getOccupancy(pt_idx)[m[K == SDFMap::UNKNOWN) continue;
      |             [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |             [32m[K([m[K                              [32m[K)[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:275:45:[m[K [01;35m[Kwarning: [m[Kcomparison of constant â€˜[01m[K-1[m[Kâ€™ with boolean expression is always false [[01;35m[K-Wbool-compare[m[K]
  275 |         if ([01;35m[K!sdf_map_->getOccupancy(pt_idx) == SDFMap::UNKNOWN[m[K) continue;
      |             [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:239:8:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kt1[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  239 |   auto [01;35m[Kt1[m[K = ros::Time::now();
      |        [01;35m[K^~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:[m[K In member function â€˜[01m[Kdouble bg_planner::HeadingPlanner::calcInfoGain(const Vector3d&, const double&, const int&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:362:45:[m[K [01;35m[Kwarning: [m[Klogical not is only applied to the left hand side of comparison [[01;35m[K-Wlogical-not-parentheses[m[K]
  362 |         if (!sdf_map_->getOccupancy(pt_idx) [01;35m[K==[m[K SDFMap::UNKNOWN) continue;
      |                                             [01;35m[K^~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:362:13:[m[K [01;36m[Knote: [m[Kadd parentheses around left hand side expression to silence this warning
  362 |         if ([01;36m[K!sdf_map_->getOccupancy(pt_idx)[m[K == SDFMap::UNKNOWN) continue;
      |             [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |             [32m[K([m[K                              [32m[K)[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:362:45:[m[K [01;35m[Kwarning: [m[Kcomparison of constant â€˜[01m[K-1[m[Kâ€™ with boolean expression is always false [[01;35m[K-Wbool-compare[m[K]
  362 |         if ([01;35m[K!sdf_map_->getOccupancy(pt_idx) == SDFMap::UNKNOWN[m[K) continue;
      |             [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:326:8:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kt1[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  326 |   auto [01;35m[Kt1[m[K = ros::Time::now();
      |        [01;35m[K^~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:[m[K In member function â€˜[01m[Kvoid bg_planner::HeadingPlanner::calcVisibFrontier(const Vector3d&, const double&, std::unordered_map<int, int>&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:518:8:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kt1[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  518 |   auto [01;35m[Kt1[m[K = ros::Time::now();
      |        [01;35m[K^~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kbool bg_planner::FrontierFinder::setNextDoor(int)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:1841:1:[m[K [01;35m[Kwarning: [m[Kcontrol reaches end of non-void function [[01;35m[K-Wreturn-type[m[K]
 1841 | [01;35m[K}[m[K
      | [01;35m[K^[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:[m[K In member function â€˜[01m[Kbool bg_planner::HeadingPlanner::insideFoV(const Vector4d&)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:624:9:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[K*((void*)& pc +16)[m[Kâ€™ is used uninitialized in this function [[01;35m[K-Wuninitialized[m[K]
  624 |   if ([01;35m[Kpc(2)[m[K < near_ || pc(2) > far_) {
      |       [01;35m[K~~^~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:628:18:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kpc[m[Kâ€™ may be used uninitialized in this function [[01;35m[K-Wmaybe-uninitialized[m[K]
  628 |   double txz = [01;35m[Kpc(0)[m[K / pc(2);
      |                [01;35m[K~~^~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/heading_planner.cpp:633:18:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[K*((void*)& pc +8)[m[Kâ€™ may be used uninitialized in this function [[01;35m[K-Wmaybe-uninitialized[m[K]
  633 |   double tyz = [01;35m[Kpc(1)[m[K / pc(2);
      |                [01;35m[K~~^~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kbool bg_planner::FrontierFinder::isNearObstacle(const Vector3d&, double)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:857:28:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvox_num[m[Kâ€™ may be used uninitialized in this function [[01;35m[K-Wmaybe-uninitialized[m[K]
  857 |   for (int x = -vox_num; [01;35m[Kx <= vox_num[m[K; ++x)
      |                          [01;35m[K~~^~~~~~~~~~[m[K
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:[m[K In member function â€˜[01m[Kbool bg_planner::FrontierFinder::detectVerticalGap(Eigen::Vector3d&, double&, const double&, const double&, const double&, bool, bool)[m[Kâ€™:
[01m[K/home/hak/catkin_SEER/src/SEER/planner/active_perception/src/frontier_finder.cpp:1564:19:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kdis[m[Kâ€™ may be used uninitialized in this function [[01;35m[K-Wmaybe-uninitialized[m[K]
 1564 |   if ([01;35m[Kv_min_door_ < dis[m[K < v_max_door_) {
      |       [01;35m[K~~~~~~~~~~~~^~~~~[m[K
