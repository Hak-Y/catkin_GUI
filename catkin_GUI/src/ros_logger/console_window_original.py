# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'console_window_original.ui'
#
# Created by: PyQt5 UI code generator 5.10.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_ConsoleWindow(object):
    def setupUi(self, ConsoleWindow):
        ConsoleWindow.setObjectName("ConsoleWindow")
        ConsoleWindow.setEnabled(True)
        ConsoleWindow.resize(1116, 774)
        ConsoleWindow.setMaximumSize(QtCore.QSize(1116, 774))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/selection_016.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        ConsoleWindow.setWindowIcon(icon)
        ConsoleWindow.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.Australia))
        self.centralwidget = QtWidgets.QWidget(ConsoleWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setGeometry(QtCore.QRect(10, 130, 271, 501))
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.nodeList = QtWidgets.QListView(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.nodeList.sizePolicy().hasHeightForWidth())
        self.nodeList.setSizePolicy(sizePolicy)
        self.nodeList.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.nodeList.setObjectName("nodeList")
        self.messageList = QtWidgets.QListView(self.centralwidget)
        self.messageList.setGeometry(QtCore.QRect(640, 130, 471, 581))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(3)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.messageList.sizePolicy().hasHeightForWidth())
        self.messageList.setSizePolicy(sizePolicy)
        self.messageList.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.messageList.setStyleSheet("")
        self.messageList.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.messageList.setObjectName("messageList")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(290, 360, 341, 215))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.groupBox.setFont(font)
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout.setObjectName("verticalLayout")
        self.debugOptionLayout = QtWidgets.QHBoxLayout()
        self.debugOptionLayout.setObjectName("debugOptionLayout")
        self.checkDebug = QtWidgets.QCheckBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkDebug.sizePolicy().hasHeightForWidth())
        self.checkDebug.setSizePolicy(sizePolicy)
        self.checkDebug.setChecked(True)
        self.checkDebug.setObjectName("checkDebug")
        self.debugOptionLayout.addWidget(self.checkDebug)
        self.debugColorWidget = QtWidgets.QPushButton(self.groupBox)
        self.debugColorWidget.setObjectName("debugColorWidget")
        self.debugOptionLayout.addWidget(self.debugColorWidget)
        self.verticalLayout.addLayout(self.debugOptionLayout)
        self.infoOptionLayout = QtWidgets.QHBoxLayout()
        self.infoOptionLayout.setObjectName("infoOptionLayout")
        self.checkInfo = QtWidgets.QCheckBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkInfo.sizePolicy().hasHeightForWidth())
        self.checkInfo.setSizePolicy(sizePolicy)
        self.checkInfo.setChecked(True)
        self.checkInfo.setObjectName("checkInfo")
        self.infoOptionLayout.addWidget(self.checkInfo)
        self.infoColorWidget = QtWidgets.QPushButton(self.groupBox)
        self.infoColorWidget.setObjectName("infoColorWidget")
        self.infoOptionLayout.addWidget(self.infoColorWidget)
        self.verticalLayout.addLayout(self.infoOptionLayout)
        self.warnOptionLayout = QtWidgets.QHBoxLayout()
        self.warnOptionLayout.setObjectName("warnOptionLayout")
        self.checkWarn = QtWidgets.QCheckBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkWarn.sizePolicy().hasHeightForWidth())
        self.checkWarn.setSizePolicy(sizePolicy)
        self.checkWarn.setChecked(True)
        self.checkWarn.setObjectName("checkWarn")
        self.warnOptionLayout.addWidget(self.checkWarn)
        self.warnColorWidget = QtWidgets.QPushButton(self.groupBox)
        self.warnColorWidget.setObjectName("warnColorWidget")
        self.warnOptionLayout.addWidget(self.warnColorWidget)
        self.verticalLayout.addLayout(self.warnOptionLayout)
        self.errorOptionLayout = QtWidgets.QHBoxLayout()
        self.errorOptionLayout.setObjectName("errorOptionLayout")
        self.checkError = QtWidgets.QCheckBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkError.sizePolicy().hasHeightForWidth())
        self.checkError.setSizePolicy(sizePolicy)
        self.checkError.setChecked(True)
        self.checkError.setObjectName("checkError")
        self.errorOptionLayout.addWidget(self.checkError)
        self.errorColorWidget = QtWidgets.QPushButton(self.groupBox)
        self.errorColorWidget.setObjectName("errorColorWidget")
        self.errorOptionLayout.addWidget(self.errorColorWidget)
        self.verticalLayout.addLayout(self.errorOptionLayout)
        self.fatalOptionLayout = QtWidgets.QHBoxLayout()
        self.fatalOptionLayout.setObjectName("fatalOptionLayout")
        self.checkFatal = QtWidgets.QCheckBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkFatal.sizePolicy().hasHeightForWidth())
        self.checkFatal.setSizePolicy(sizePolicy)
        self.checkFatal.setMaximumSize(QtCore.QSize(1116, 774))
        self.checkFatal.setChecked(True)
        self.checkFatal.setObjectName("checkFatal")
        self.fatalOptionLayout.addWidget(self.checkFatal)
        self.fatalColorWidget = QtWidgets.QPushButton(self.groupBox)
        self.fatalColorWidget.setObjectName("fatalColorWidget")
        self.fatalOptionLayout.addWidget(self.fatalColorWidget)
        self.verticalLayout.addLayout(self.fatalOptionLayout)
        self.clearAllButton = QtWidgets.QPushButton(self.centralwidget)
        self.clearAllButton.setGeometry(QtCore.QRect(10, 650, 114, 27))
        self.clearAllButton.setObjectName("clearAllButton")
        self.clearMessagesButton = QtWidgets.QPushButton(self.centralwidget)
        self.clearMessagesButton.setGeometry(QtCore.QRect(130, 650, 151, 27))
        self.clearMessagesButton.setObjectName("clearMessagesButton")
        self.checkFollowNewest = QtWidgets.QCheckBox(self.centralwidget)
        self.checkFollowNewest.setGeometry(QtCore.QRect(20, 680, 241, 25))
        self.checkFollowNewest.setChecked(True)
        self.checkFollowNewest.setObjectName("checkFollowNewest")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(290, 680, 63, 41))
        self.label.setObjectName("label")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(368, 680, 261, 41))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.searchText = QtWidgets.QLineEdit(self.layoutWidget)
        self.searchText.setObjectName("searchText")
        self.horizontalLayout_3.addWidget(self.searchText)
        self.pushNext = QtWidgets.QPushButton(self.layoutWidget)
        self.pushNext.setObjectName("pushNext")
        self.horizontalLayout_3.addWidget(self.pushNext)
        self.pushPrev = QtWidgets.QPushButton(self.layoutWidget)
        self.pushPrev.setObjectName("pushPrev")
        self.horizontalLayout_3.addWidget(self.pushPrev)
        self.excludeLabel = QtWidgets.QLabel(self.centralwidget)
        self.excludeLabel.setGeometry(QtCore.QRect(290, 650, 63, 27))
        self.excludeLabel.setObjectName("excludeLabel")
        self.excludeText = QtWidgets.QLineEdit(self.centralwidget)
        self.excludeText.setGeometry(QtCore.QRect(370, 650, 260, 27))
        self.excludeText.setObjectName("excludeText")
        self.includeLabel = QtWidgets.QLabel(self.centralwidget)
        self.includeLabel.setGeometry(QtCore.QRect(290, 620, 59, 27))
        self.includeLabel.setObjectName("includeLabel")
        self.includeText = QtWidgets.QLineEdit(self.centralwidget)
        self.includeText.setGeometry(QtCore.QRect(370, 620, 261, 27))
        self.includeText.setStatusTip("")
        self.includeText.setObjectName("includeText")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(990, 30, 111, 61))
        self.label_3.setText("")
        self.label_3.setPixmap(QtGui.QPixmap(":/images/UNIST.png"))
        self.label_3.setScaledContents(True)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(560, 20, 321, 41))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setItalic(True)
        self.label_4.setFont(font)
        self.label_4.setText("")
        self.label_4.setScaledContents(False)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(240, 40, 501, 41))
        font = QtGui.QFont()
        font.setPointSize(23)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setScaledContents(False)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(40, 100, 211, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setScaledContents(False)
        self.label_6.setObjectName("label_6")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(820, 100, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setScaledContents(False)
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(360, 580, 211, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setScaledContents(False)
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(390, 100, 171, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setScaledContents(False)
        self.label_10.setObjectName("label_10")
        self.openGLWidget = QtWidgets.QOpenGLWidget(self.centralwidget)
        self.openGLWidget.setGeometry(QtCore.QRect(300, 130, 321, 191))
        self.openGLWidget.setObjectName("openGLWidget")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(380, 360, 171, 19))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setScaledContents(False)
        self.label_7.setObjectName("label_7")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(50, 10, 111, 101))
        self.label_2.setObjectName("label_2")
        ConsoleWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(ConsoleWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1116, 22))
        self.menubar.setObjectName("menubar")
        self.menu_File = QtWidgets.QMenu(self.menubar)
        self.menu_File.setObjectName("menu_File")
        self.menu_Edit = QtWidgets.QMenu(self.menubar)
        self.menu_Edit.setObjectName("menu_Edit")
        self.menuOptions = QtWidgets.QMenu(self.menubar)
        self.menuOptions.setObjectName("menuOptions")
        ConsoleWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(ConsoleWindow)
        self.statusbar.setObjectName("statusbar")
        ConsoleWindow.setStatusBar(self.statusbar)
        self.action_Quit = QtWidgets.QAction(ConsoleWindow)
        self.action_Quit.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.action_Quit.setObjectName("action_Quit")
        self.action_NewWindow = QtWidgets.QAction(ConsoleWindow)
        self.action_NewWindow.setObjectName("action_NewWindow")
        self.action_Copy = QtWidgets.QAction(ConsoleWindow)
        self.action_Copy.setObjectName("action_Copy")
        self.action_SelectAll = QtWidgets.QAction(ConsoleWindow)
        self.action_SelectAll.setObjectName("action_SelectAll")
        self.action_ReadBagFile = QtWidgets.QAction(ConsoleWindow)
        self.action_ReadBagFile.setObjectName("action_ReadBagFile")
        self.action_SaveLogs = QtWidgets.QAction(ConsoleWindow)
        self.action_SaveLogs.setObjectName("action_SaveLogs")
        self.action_AbsoluteTimestamps = QtWidgets.QAction(ConsoleWindow)
        self.action_AbsoluteTimestamps.setCheckable(True)
        self.action_AbsoluteTimestamps.setObjectName("action_AbsoluteTimestamps")
        self.action_ShowTimestamps = QtWidgets.QAction(ConsoleWindow)
        self.action_ShowTimestamps.setCheckable(True)
        self.action_ShowTimestamps.setChecked(True)
        self.action_ShowTimestamps.setObjectName("action_ShowTimestamps")
        self.action_ColorizeLogs = QtWidgets.QAction(ConsoleWindow)
        self.action_ColorizeLogs.setCheckable(True)
        self.action_ColorizeLogs.setChecked(True)
        self.action_ColorizeLogs.setObjectName("action_ColorizeLogs")
        self.action_SelectFont = QtWidgets.QAction(ConsoleWindow)
        self.action_SelectFont.setObjectName("action_SelectFont")
        self.action_RegularExpressions = QtWidgets.QAction(ConsoleWindow)
        self.action_RegularExpressions.setCheckable(True)
        self.action_RegularExpressions.setChecked(False)
        self.action_RegularExpressions.setObjectName("action_RegularExpressions")
        self.action_CopyExtended = QtWidgets.QAction(ConsoleWindow)
        self.action_CopyExtended.setObjectName("action_CopyExtended")
        self.action_ReadLogFile = QtWidgets.QAction(ConsoleWindow)
        self.action_ReadLogFile.setObjectName("action_ReadLogFile")
        self.action_ReadLogDirectory = QtWidgets.QAction(ConsoleWindow)
        self.action_ReadLogDirectory.setObjectName("action_ReadLogDirectory")
        self.menu_File.addAction(self.action_NewWindow)
        self.menu_File.addAction(self.action_ReadBagFile)
        self.menu_File.addAction(self.action_ReadLogFile)
        self.menu_File.addAction(self.action_ReadLogDirectory)
        self.menu_File.addAction(self.action_SaveLogs)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_Quit)
        self.menu_Edit.addAction(self.action_Copy)
        self.menu_Edit.addAction(self.action_CopyExtended)
        self.menu_Edit.addAction(self.action_SelectAll)
        self.menuOptions.addAction(self.action_ShowTimestamps)
        self.menuOptions.addAction(self.action_AbsoluteTimestamps)
        self.menuOptions.addAction(self.action_RegularExpressions)
        self.menuOptions.addAction(self.action_ColorizeLogs)
        self.menuOptions.addAction(self.action_SelectFont)
        self.menubar.addAction(self.menu_File.menuAction())
        self.menubar.addAction(self.menu_Edit.menuAction())
        self.menubar.addAction(self.menuOptions.menuAction())

        self.retranslateUi(ConsoleWindow)
        self.action_Quit.triggered.connect(ConsoleWindow.close)
        QtCore.QMetaObject.connectSlotsByName(ConsoleWindow)

    def retranslateUi(self, ConsoleWindow):
        _translate = QtCore.QCoreApplication.translate
        ConsoleWindow.setWindowTitle(_translate("ConsoleWindow", "KEPCO Monitoring System"))
        self.checkDebug.setText(_translate("ConsoleWindow", "Debug"))
        self.checkInfo.setText(_translate("ConsoleWindow", "Info"))
        self.checkWarn.setText(_translate("ConsoleWindow", "Warn"))
        self.checkError.setText(_translate("ConsoleWindow", "Error"))
        self.checkFatal.setText(_translate("ConsoleWindow", "Fatal "))
        self.clearAllButton.setText(_translate("ConsoleWindow", "Clear All"))
        self.clearMessagesButton.setText(_translate("ConsoleWindow", "Clear Messages"))
        self.checkFollowNewest.setText(_translate("ConsoleWindow", "Follow Newest Messages"))
        self.label.setText(_translate("ConsoleWindow", "Search"))
        self.pushNext.setText(_translate("ConsoleWindow", "Next"))
        self.pushPrev.setText(_translate("ConsoleWindow", "Previous"))
        self.excludeLabel.setText(_translate("ConsoleWindow", "Exclude"))
        self.excludeText.setToolTip(_translate("ConsoleWindow", "Filter for messages that don\'t include substrings. Separate substrings with a semicolon."))
        self.includeLabel.setText(_translate("ConsoleWindow", "Include"))
        self.includeText.setToolTip(_translate("ConsoleWindow", "Filter for messages that include substrings. Separate substrings with a semicolon."))
        self.label_5.setText(_translate("ConsoleWindow", "한국 로봇항공기 경연대회 HMCL GCS"))
        self.label_6.setText(_translate("ConsoleWindow", "< Activated Fuctions >"))
        self.label_8.setText(_translate("ConsoleWindow", "< Log Viewer >"))
        self.label_9.setText(_translate("ConsoleWindow", "< Monitoring Options >"))
        self.label_10.setText(_translate("ConsoleWindow", "< Camera View >"))
        self.label_7.setText(_translate("ConsoleWindow", "< Severity Level >"))
        self.label_2.setText(_translate("ConsoleWindow", "<html><head/><body><p><img src=\":/images/Selection_016.png\"/></p></body></html>"))
        self.menu_File.setTitle(_translate("ConsoleWindow", "&File"))
        self.menu_Edit.setTitle(_translate("ConsoleWindow", "&Edit"))
        self.menuOptions.setTitle(_translate("ConsoleWindow", "Options"))
        self.action_Quit.setText(_translate("ConsoleWindow", "&Quit"))
        self.action_Quit.setShortcut(_translate("ConsoleWindow", "Ctrl+Q"))
        self.action_NewWindow.setText(_translate("ConsoleWindow", "&New Window"))
        self.action_NewWindow.setShortcut(_translate("ConsoleWindow", "Ctrl+N"))
        self.action_Copy.setText(_translate("ConsoleWindow", "&Copy"))
        self.action_Copy.setShortcut(_translate("ConsoleWindow", "Ctrl+C"))
        self.action_SelectAll.setText(_translate("ConsoleWindow", "Select &All"))
        self.action_SelectAll.setShortcut(_translate("ConsoleWindow", "Ctrl+A"))
        self.action_ReadBagFile.setText(_translate("ConsoleWindow", "&Read Bag File..."))
        self.action_ReadBagFile.setShortcut(_translate("ConsoleWindow", "Ctrl+R"))
        self.action_SaveLogs.setText(_translate("ConsoleWindow", "&Save Logs..."))
        self.action_SaveLogs.setShortcut(_translate("ConsoleWindow", "Ctrl+S"))
        self.action_AbsoluteTimestamps.setText(_translate("ConsoleWindow", "Absolute Timestamps"))
        self.action_AbsoluteTimestamps.setToolTip(_translate("ConsoleWindow", "Absolute Timestamps"))
        self.action_ShowTimestamps.setText(_translate("ConsoleWindow", "Show Timestamps"))
        self.action_ColorizeLogs.setText(_translate("ConsoleWindow", "Colorize Logs"))
        self.action_SelectFont.setText(_translate("ConsoleWindow", "Select Font..."))
        self.action_RegularExpressions.setText(_translate("ConsoleWindow", "Allow regular expressions in Include/Exclude"))
        self.action_CopyExtended.setText(_translate("ConsoleWindow", "Copy &Extended"))
        self.action_CopyExtended.setToolTip(_translate("ConsoleWindow", "Copy Extended Log"))
        self.action_CopyExtended.setShortcut(_translate("ConsoleWindow", "Ctrl+E"))
        self.action_ReadLogFile.setText(_translate("ConsoleWindow", "Read &Log File..."))
        self.action_ReadLogFile.setToolTip(_translate("ConsoleWindow", "Read a rosout.log file"))
        self.action_ReadLogFile.setShortcut(_translate("ConsoleWindow", "Ctrl+L"))
        self.action_ReadLogDirectory.setText(_translate("ConsoleWindow", "Read Log &Directory..."))
        self.action_ReadLogDirectory.setToolTip(_translate("ConsoleWindow", "Read Log Directory"))
        self.action_ReadLogDirectory.setShortcut(_translate("ConsoleWindow", "Ctrl+D, Return"))

import images_rc
